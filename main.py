'''
Менеджер задач
Задача: Создай класс `Task`, который позволяет управлять задачами (делами). У задачи должны быть атрибуты: описание задачи, срок выполнения и статус (выполнено/не выполнено). Реализуй функцию для добавления задач, отметки выполненных задач и вывода списка текущих (не выполненных) задач.
*Дополнительное задание:
Ты разрабатываешь программное обеспечение для сети магазинов. Каждый магазин в этой сети имеет свои особенности, но также существуют общие характеристики, такие как адрес, название и ассортимент товаров. Ваша задача — создать класс `Store`, который можно будет использовать для создания различных магазинов.
Шаги:

1. Создай класс `Store`:
-Атрибуты класса:
- `name`: название магазина.
- `address`: адрес магазина.
- `items`: словарь, где ключ - название товара, а значение - его цена. Например, `{'apples': 0.5, 'bananas': 0.75}`.
- Методы класса:
- `__init__ - конструктор, который инициализирует название и адрес, а также пустой словарь для `items`.
-  метод для добавления товара в ассортимент.
- метод для удаления товара из ассортимента.
- метод для получения цены товара по его названию. Если товар отсутствует, возвращайте `None`.
- метод для обновления цены товара.

2. Создай несколько объектов класса `Store`:
Создай не менее трех различных магазинов с разными названиями, адресами и добавь в каждый из них несколько товаров.

3. Протестировать методы:
Выбери один из созданных магазинов и протестируй все его методы: добавь товар, обнови цену, убери товар и запрашивай цену.
В поле для ответа загрузи ссылку на GitHub-репозиторий, содержащий код проекта с реализацией задания.
'''
 import Task
 import Store

 # Создание объектов класса Store
 store1 = Store("Store 1", "123 Main St")
 store2 = Store("Store 2", "456 Elm St")
 store3 = Store("Store 3", "789 Maple St")

 # Добавление товаров в магазины
 store1.add_item("apples", 0.5)
 store1.add_item("bananas", 0.75)
 store2.add_item("oranges", 0.6)
 store2.add_item("pears", 0.8)
 store3.add_item("grapes", 2.0)
 store3.add_item("lemons", 1.0)

 # Тестирование методов для одного из магазинов
 print("Testing Store 1:")
 print(store1)

 # Добавление товара
 store1.add_item("cherries", 3.0)
 print("After adding cherries:")
 print(store1)

 # Обновление цены товара
 store1.update_price("bananas", 0.85)
 print("After updating price of bananas:")
 print(store1)

 # Удаление товара
 store1.remove_item("apples")
 print("After removing apples:")
 print(store1)

 # Запрос цены товара
 print(f"Price of bananas: {store1.get_price('bananas')}")
 print(f"Price of apples: {store1.get_price('apples')}")

task1 = Task.Task("Buy apples", "2023-06-01")
task2 = Task.Task("Buy bananas", "2023-06-02")
task3 = Task.Task("Buy oranges", "2023-06-03")

task_list = [task1, task2, task3]

print(get_current_tasks(task_list))